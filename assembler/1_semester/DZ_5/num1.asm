section .bss
 fd resb 4     ;выделяем 4 байта для файлового дескриптора fd
 x resb 1      ;выделяем 1 байт для x

section .data
 msg db '-', 0   ;символ, на который будут заменены все данные в файле

section .text:
 global _start
_start:

 pop ebx    ;передаём имя файла при запуске программы
 pop ebx    ;так как при запуске передаётся одна строка, то она находится в стеке на третьей позиции
 pop ebx    ;то есть после третьей операции pop регистр ebx указывает на строку с именем файла

 mov eax, 5     ;задаём системный вызов sys_open
 mov ecx, 2     ;задаём режим открытия файла, в данном случае открываем файл и для чтения, и для записи
 mov edx, 0
 int 0x80
 mov [fd], eax    ;после открытия файла помещаем файловый дескриптор в переменную fd

point:            ;создаём метку point
 mov eax, 3       ;теперь считываем один байт из файла, для этого задаём системный вызов sys_read
 mov ebx, [fd]    ;передаём значение файлового дескриптора
 mov ecx, x       ;считываем в переменную x
 mov edx, 1       ;считываем 1 байт
 int 0x80

 cmp eax, 1       ;этот системный вызов по результату выполнения возвращает число действительно считанных байт
 jne exit         ;это число хранится в eax, поэтому если значение eax равно единице, то есть конец файла еще не достигнут
                  ;перемещаемся к метке exit

 mov eax, 19       ;задаём системный вызов sys_lseek, который позволит переместится нам на нужную позицию в файле
 mov ebx, [fd]     ;передаём файловый дескриптор
 mov ecx, -1       ;в edx передаём 1, что означает, что мы хотим сдвинуться относительно текущего положения файлового дескриптора
 mov edx, 1        ;и перемещаемся на -1 позицию относительно текущего положения файлового дескриптора
 int 0x80

 mov eax, 4        ;задаём системный вызов sys_write
 mov ebx, [fd]     ;передаём значение файлового дескриптора 
 mov ecx, msg      ;записываем в файл значение переменной msg, то есть тот символ, на который будут заменены все исходные символы в файле
 mov edx, 1
 int 0x80
 
 jmp point         ;перемещаемся к метке point
 
exit:              ;как только достигнут конец файла, перемещаемся к метке exit
 mov eax, 6        ;закрываем файл
 mov ebx, [fd] 
 int 0x80

 mov eax, 1        ;завершаем выполнение программы
 mov ebx, 0
 int 0x80
 
